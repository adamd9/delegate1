name: Deploy to Server

on:
  push:
    branches:
      - '**'  # Trigger on all branches

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install dependencies (webapp)
        working-directory: webapp
        run: npm ci

      - name: Build webapp
        working-directory: webapp
        env:
          NEXT_PUBLIC_REMOTE_BACKEND: ${{ github.ref_name == 'main' && 'https://hk.api.mdlg.dev' || 'https://hk-dev.api.mdlg.dev' }}
        run: npm run build

      - name: List build output directories
        run: ls -la webapp/.next       

      - name: Upload webapp build artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          include-hidden-files: true
          name: webapp-build
          path: |
            webapp/.next
            webapp/package.json
            webapp/scripts
            webapp/public

      - name: Install dependencies (websocket-server)
        working-directory: websocket-server
        run: npm ci

  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24

      - name: Install dependencies (backend)
        working-directory: websocket-server
        run: npm ci

      - name: Build backend
        working-directory: websocket-server
        run: npm run build

      - name: List backend build output directories
        run: ls -la websocket-server/dist

      - name: Upload backend build artifact
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          include-hidden-files: true
          name: backend-build
          path: |
            websocket-server/dist
            websocket-server/package.json
            websocket-server/scripts

  trigger-dockerserver-deploy:
    needs: [build-frontend, build-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Set domains based on branch
        id: set-domains
        run: |
          if [ "${{ github.ref_name }}" = "main" ]; then
            echo "DOMAIN=hk.mdlg.dev" >> $GITHUB_ENV
            echo "API_DOMAIN=hk.api.mdlg.dev" >> $GITHUB_ENV
          else
            # All non-main branches use dev domains
            echo "DOMAIN=hk-dev.mdlg.dev" >> $GITHUB_ENV
            echo "API_DOMAIN=hk-dev.api.mdlg.dev" >> $GITHUB_ENV
          fi

      - name: Trigger Docker Server Deployment for Main Domain
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.DOCKER_SERVER_ACTIONS_TOKEN }}
          repository: adamd9/docker-server-dev
          event-type: deploy-hk
          client-payload: '{}'